#!/bin/bash

function createOrg1() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org1.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org1.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-org1 --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-org1.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-org1.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-org1.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-org1.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org1's CA cert to org1's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org1.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org1.example.com/msp/tlscacerts/ca.crt"

  # Copy org1's CA cert to org1's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org1.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem"

  # Copy org1's CA cert to org1's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org1.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org1/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org1.example.com/ca/ca.org1.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org1 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org1 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org1 --id.name org1admin --id.secret org1adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-org1 -M "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp" --csr.hosts peer0.org1.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-org1 -M "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org1.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-org1 -M "${PWD}/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org1admin:org1adminpw@localhost:7054 --caname ca-org1 -M "${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org1/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml"
}

function createOrg2() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org2.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org2.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-org2 --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-org2.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-org2.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-org2.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-org2.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org2's CA cert to org2's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org2.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org2.example.com/msp/tlscacerts/ca.crt"

  # Copy org2's CA cert to org2's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org2.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org2.example.com/tlsca/tlsca.org2.example.com-cert.pem"

  # Copy org2's CA cert to org2's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org2.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org2/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org2.example.com/ca/ca.org2.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org2 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org2 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org2 --id.name org2admin --id.secret org2adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-org2 -M "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp" --csr.hosts peer0.org2.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-org2 -M "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org2.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-org2 -M "${PWD}/organizations/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org2admin:org2adminpw@localhost:8054 --caname ca-org2 -M "${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org2/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org2.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/config.yaml"
}

function createOrg3() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org3.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org3.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:11054 --caname ca-org3 --tls.certfiles "${PWD}/organizations/fabric-ca/org3/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-org3.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-org3.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-org3.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-org3.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org3.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org3's CA cert to org3's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org3.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org3/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org3.example.com/msp/tlscacerts/ca.crt"

  # Copy org3's CA cert to org3's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org3.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org3/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org3.example.com/tlsca/tlsca.org3.example.com-cert.pem"

  # Copy org3's CA cert to org3's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org3.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org3/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org3.example.com/ca/ca.org3.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org3 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org3/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org3 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org3/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org3 --id.name org3admin --id.secret org3adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org3/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:11054 --caname ca-org3 -M "${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/msp" --csr.hosts peer0.org3.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org3/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org3.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:11054 --caname ca-org3 -M "${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org3.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org3/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:11054 --caname ca-org3 -M "${PWD}/organizations/peerOrganizations/org3.example.com/users/User1@org3.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org3/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org3.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org3.example.com/users/User1@org3.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org3admin:org3adminpw@localhost:11054 --caname ca-org3 -M "${PWD}/organizations/peerOrganizations/org3.example.com/users/Admin@org3.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org3/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org3.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org3.example.com/users/Admin@org3.example.com/msp/config.yaml"
}

function createOrg4() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org4.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org4.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:12054 --caname ca-org4 --tls.certfiles "${PWD}/organizations/fabric-ca/org4/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-12054-ca-org4.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-12054-ca-org4.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-12054-ca-org4.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-12054-ca-org4.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org4.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org4's CA cert to org4's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org4.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org4/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org4.example.com/msp/tlscacerts/ca.crt"

  # Copy org4's CA cert to org4's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org4.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org4/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org4.example.com/tlsca/tlsca.org4.example.com-cert.pem"

  # Copy org4's CA cert to org4's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org4.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org4/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org4.example.com/ca/ca.org4.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org4 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org4/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org4 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org4/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org4 --id.name org4admin --id.secret org4adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org4/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:12054 --caname ca-org4 -M "${PWD}/organizations/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/msp" --csr.hosts peer0.org4.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org4/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org4.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:12054 --caname ca-org4 -M "${PWD}/organizations/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org4.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org4/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:12054 --caname ca-org4 -M "${PWD}/organizations/peerOrganizations/org4.example.com/users/User1@org4.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org4/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org4.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org4.example.com/users/User1@org4.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org4admin:org4adminpw@localhost:12054 --caname ca-org4 -M "${PWD}/organizations/peerOrganizations/org4.example.com/users/Admin@org4.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org4/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org4.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org4.example.com/users/Admin@org4.example.com/msp/config.yaml"
}

function createOrg5() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org5.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org5.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:13054 --caname ca-org5 --tls.certfiles "${PWD}/organizations/fabric-ca/org5/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-13054-ca-org5.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-13054-ca-org5.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-13054-ca-org5.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-13054-ca-org5.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org5.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org5's CA cert to org5's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org5.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org5/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org5.example.com/msp/tlscacerts/ca.crt"

  # Copy org5's CA cert to org5's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org5.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org5/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org5.example.com/tlsca/tlsca.org5.example.com-cert.pem"

  # Copy org5's CA cert to org5's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org5.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org5/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org5.example.com/ca/ca.org5.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org5 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org5/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org5 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org5/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org5 --id.name org5admin --id.secret org5adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org5/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:13054 --caname ca-org5 -M "${PWD}/organizations/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/msp" --csr.hosts peer0.org5.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org5/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org5.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:13054 --caname ca-org5 -M "${PWD}/organizations/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org5.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org5/ca-cert.pem"
  { set +x; } 2>/dev/nullcreateorg5

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:13054 --caname ca-org5 -M "${PWD}/organizations/peerOrganizations/org5.example.com/users/User1@org5.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org5/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org5.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org5.example.com/users/User1@org5.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org5admin:org5adminpw@localhost:13054 --caname ca-org5 -M "${PWD}/organizations/peerOrganizations/org5.example.com/users/Admin@org5.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org5/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org5.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org5.example.com/users/Admin@org5.example.com/msp/config.yaml"
}

function createOrg6() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org6.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org6.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:14054 --caname ca-org6 --tls.certfiles "${PWD}/organizations/fabric-ca/org6/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-14054-ca-org6.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-14054-ca-org6.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-14054-ca-org6.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-14054-ca-org6.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org6.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org6's CA cert to org6's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org6.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org6/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org6.example.com/msp/tlscacerts/ca.crt"

  # Copy org6's CA cert to org6's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org6.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org6/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org6.example.com/tlsca/tlsca.org6.example.com-cert.pem"

  # Copy org6's CA cert to org6's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org6.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org6/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org6.example.com/ca/ca.org6.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org6 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org6/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org6 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org6/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org6 --id.name org6admin --id.secret org6adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org6/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:14054 --caname ca-org6 -M "${PWD}/organizations/peerOrganizations/org6.example.com/peers/peer0.org6.example.com/msp" --csr.hosts peer0.org6.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org6/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org6.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org6.example.com/peers/peer0.org6.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:14054 --caname ca-org6 -M "${PWD}/organizations/peerOrganizations/org6.example.com/peers/peer0.org6.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org6.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org6/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org6.example.com/peers/peer0.org6.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org6.example.com/peers/peer0.org6.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org6.example.com/peers/peer0.org6.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org6.example.com/peers/peer0.org6.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org6.example.com/peers/peer0.org6.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org6.example.com/peers/peer0.org6.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:14054 --caname ca-org6 -M "${PWD}/organizations/peerOrganizations/org6.example.com/users/User1@org6.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org6/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org6.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org6.example.com/users/User1@org6.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org6admin:org6adminpw@localhost:14054 --caname ca-org6 -M "${PWD}/organizations/peerOrganizations/org6.example.com/users/Admin@org6.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org6/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org6.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org6.example.com/users/Admin@org6.example.com/msp/config.yaml"
}

function createOrg7() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org7.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org7.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:15054 --caname ca-org7 --tls.certfiles "${PWD}/organizations/fabric-ca/org7/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-15054-ca-org7.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-15054-ca-org7.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-15054-ca-org7.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-15054-ca-org7.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org7.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org7's CA cert to org7's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org7.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org7/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org7.example.com/msp/tlscacerts/ca.crt"

  # Copy org7's CA cert to org7's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org7.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org7/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org7.example.com/tlsca/tlsca.org7.example.com-cert.pem"

  # Copy org7's CA cert to org7's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org7.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org7/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org7.example.com/ca/ca.org7.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org7 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org7/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org7 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org7/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org7 --id.name org7admin --id.secret org7adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org7/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:15054 --caname ca-org7 -M "${PWD}/organizations/peerOrganizations/org7.example.com/peers/peer0.org7.example.com/msp" --csr.hosts peer0.org7.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org7/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org7.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org7.example.com/peers/peer0.org7.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:15054 --caname ca-org7 -M "${PWD}/organizations/peerOrganizations/org7.example.com/peers/peer0.org7.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org7.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org7/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org7.example.com/peers/peer0.org7.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org7.example.com/peers/peer0.org7.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org7.example.com/peers/peer0.org7.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org7.example.com/peers/peer0.org7.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org7.example.com/peers/peer0.org7.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org7.example.com/peers/peer0.org7.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:15054 --caname ca-org7 -M "${PWD}/organizations/peerOrganizations/org7.example.com/users/User1@org7.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org7/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org7.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org7.example.com/users/User1@org7.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org7admin:org7adminpw@localhost:15054 --caname ca-org7 -M "${PWD}/organizations/peerOrganizations/org7.example.com/users/Admin@org7.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org7/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org7.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org7.example.com/users/Admin@org7.example.com/msp/config.yaml"
}

function createOrg8() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org8.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org8.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:16054 --caname ca-org8 --tls.certfiles "${PWD}/organizations/fabric-ca/org8/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-16054-ca-org8.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-16054-ca-org8.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-16054-ca-org8.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-16054-ca-org8.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org8.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org8's CA cert to org8's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org8.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org8/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org8.example.com/msp/tlscacerts/ca.crt"

  # Copy org8's CA cert to org8's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org8.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org8/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org8.example.com/tlsca/tlsca.org8.example.com-cert.pem"

  # Copy org8's CA cert to org8's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org8.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org8/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org8.example.com/ca/ca.org8.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org8 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org8/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org8 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org8/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org8 --id.name org8admin --id.secret org8adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org8/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:16054 --caname ca-org8 -M "${PWD}/organizations/peerOrganizations/org8.example.com/peers/peer0.org8.example.com/msp" --csr.hosts peer0.org8.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org8/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org8.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org8.example.com/peers/peer0.org8.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:16054 --caname ca-org8 -M "${PWD}/organizations/peerOrganizations/org8.example.com/peers/peer0.org8.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org8.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org8/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org8.example.com/peers/peer0.org8.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org8.example.com/peers/peer0.org8.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org8.example.com/peers/peer0.org8.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org8.example.com/peers/peer0.org8.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org8.example.com/peers/peer0.org8.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org8.example.com/peers/peer0.org8.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:16054 --caname ca-org8 -M "${PWD}/organizations/peerOrganizations/org8.example.com/users/User1@org8.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org8/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org8.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org8.example.com/users/User1@org8.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org8admin:org8adminpw@localhost:16054 --caname ca-org8 -M "${PWD}/organizations/peerOrganizations/org8.example.com/users/Admin@org8.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org8/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org8.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org8.example.com/users/Admin@org8.example.com/msp/config.yaml"
}

function createOrg9() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org9.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org9.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:17054 --caname ca-org9 --tls.certfiles "${PWD}/organizations/fabric-ca/org9/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-17054-ca-org9.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-17054-ca-org9.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-17054-ca-org9.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-17054-ca-org9.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org9.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org9's CA cert to org9's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org9.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org9/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org9.example.com/msp/tlscacerts/ca.crt"

  # Copy org9's CA cert to org9's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org9.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org9/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org9.example.com/tlsca/tlsca.org9.example.com-cert.pem"

  # Copy org9's CA cert to org9's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org9.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org9/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org9.example.com/ca/ca.org9.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org9 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org9/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org9 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org9/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org9 --id.name org9admin --id.secret org9adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org9/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:17054 --caname ca-org9 -M "${PWD}/organizations/peerOrganizations/org9.example.com/peers/peer0.org9.example.com/msp" --csr.hosts peer0.org9.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org9/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org9.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org9.example.com/peers/peer0.org9.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:17054 --caname ca-org9 -M "${PWD}/organizations/peerOrganizations/org9.example.com/peers/peer0.org9.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org9.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org9/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org9.example.com/peers/peer0.org9.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org9.example.com/peers/peer0.org9.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org9.example.com/peers/peer0.org9.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org9.example.com/peers/peer0.org9.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org9.example.com/peers/peer0.org9.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org9.example.com/peers/peer0.org9.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:17054 --caname ca-org9 -M "${PWD}/organizations/peerOrganizations/org9.example.com/users/User1@org9.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org9/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org9.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org9.example.com/users/User1@org9.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org9admin:org9adminpw@localhost:17054 --caname ca-org9 -M "${PWD}/organizations/peerOrganizations/org9.example.com/users/Admin@org9.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org9/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org9.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org9.example.com/users/Admin@org9.example.com/msp/config.yaml"
}

function createOrg10() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org10.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org10.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:18054 --caname ca-org10 --tls.certfiles "${PWD}/organizations/fabric-ca/org10/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-18054-ca-org10.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-18054-ca-org10.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-18054-ca-org10.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-18054-ca-org10.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org10.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org10's CA cert to org10's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org10.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org10/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org10.example.com/msp/tlscacerts/ca.crt"

  # Copy org10's CA cert to org10's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org10.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org10/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org10.example.com/tlsca/tlsca.org10.example.com-cert.pem"

  # Copy org10's CA cert to org10's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org10.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org10/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org10.example.com/ca/ca.org10.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org10 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org10/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org10 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org10/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org10 --id.name org10admin --id.secret org10adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org10/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:18054 --caname ca-org10 -M "${PWD}/organizations/peerOrganizations/org10.example.com/peers/peer0.org10.example.com/msp" --csr.hosts peer0.org10.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org10/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org10.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org10.example.com/peers/peer0.org10.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:18054 --caname ca-org10 -M "${PWD}/organizations/peerOrganizations/org10.example.com/peers/peer0.org10.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org10.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org10/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org10.example.com/peers/peer0.org10.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org10.example.com/peers/peer0.org10.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org10.example.com/peers/peer0.org10.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org10.example.com/peers/peer0.org10.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org10.example.com/peers/peer0.org10.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org10.example.com/peers/peer0.org10.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:18054 --caname ca-org10 -M "${PWD}/organizations/peerOrganizations/org10.example.com/users/User1@org10.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org10/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org10.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org10.example.com/users/User1@org10.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org10admin:org10adminpw@localhost:18054 --caname ca-org10 -M "${PWD}/organizations/peerOrganizations/org10.example.com/users/Admin@org10.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org10/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org10.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org10.example.com/users/Admin@org10.example.com/msp/config.yaml"
}

function createOrg11() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org11.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org11.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:19054 --caname ca-org11 --tls.certfiles "${PWD}/organizations/fabric-ca/org11/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-19054-ca-org11.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-19054-ca-org11.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-19054-ca-org11.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-19054-ca-org11.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org11.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org11's CA cert to org11's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org11.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org11/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org11.example.com/msp/tlscacerts/ca.crt"

  # Copy org11's CA cert to org11's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org11.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org11/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org11.example.com/tlsca/tlsca.org11.example.com-cert.pem"

  # Copy org11's CA cert to org11's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org11.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org11/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org11.example.com/ca/ca.org11.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org11 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org11/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org11 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org11/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org11 --id.name org11admin --id.secret org11adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org11/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:19054 --caname ca-org11 -M "${PWD}/organizations/peerOrganizations/org11.example.com/peers/peer0.org11.example.com/msp" --csr.hosts peer0.org11.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org11/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org11.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org11.example.com/peers/peer0.org11.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:19054 --caname ca-org11 -M "${PWD}/organizations/peerOrganizations/org11.example.com/peers/peer0.org11.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org11.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org11/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org11.example.com/peers/peer0.org11.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org11.example.com/peers/peer0.org11.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org11.example.com/peers/peer0.org11.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org11.example.com/peers/peer0.org11.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org11.example.com/peers/peer0.org11.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org11.example.com/peers/peer0.org11.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:19054 --caname ca-org11 -M "${PWD}/organizations/peerOrganizations/org11.example.com/users/User1@org11.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org11/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org11.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org11.example.com/users/User1@org11.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org11admin:org11adminpw@localhost:19054 --caname ca-org11 -M "${PWD}/organizations/peerOrganizations/org11.example.com/users/Admin@org11.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org11/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org11.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org11.example.com/users/Admin@org11.example.com/msp/config.yaml"
}

function createOrg12() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org12.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org12.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:20054 --caname ca-org12 --tls.certfiles "${PWD}/organizations/fabric-ca/org12/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-20054-ca-org12.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-20054-ca-org12.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-20054-ca-org12.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-20054-ca-org12.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org12.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org12's CA cert to org12's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org12.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org12/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org12.example.com/msp/tlscacerts/ca.crt"

  # Copy org12's CA cert to org12's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org12.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org12/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org12.example.com/tlsca/tlsca.org12.example.com-cert.pem"

  # Copy org12's CA cert to org12's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org12.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org12/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org12.example.com/ca/ca.org12.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org12 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org12/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org12 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org12/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org12 --id.name org12admin --id.secret org12adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org12/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:20054 --caname ca-org12 -M "${PWD}/organizations/peerOrganizations/org12.example.com/peers/peer0.org12.example.com/msp" --csr.hosts peer0.org12.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org12/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org12.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org12.example.com/peers/peer0.org12.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:20054 --caname ca-org12 -M "${PWD}/organizations/peerOrganizations/org12.example.com/peers/peer0.org12.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org12.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org12/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org12.example.com/peers/peer0.org12.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org12.example.com/peers/peer0.org12.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org12.example.com/peers/peer0.org12.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org12.example.com/peers/peer0.org12.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org12.example.com/peers/peer0.org12.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org12.example.com/peers/peer0.org12.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:20054 --caname ca-org12 -M "${PWD}/organizations/peerOrganizations/org12.example.com/users/User1@org12.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org12/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org12.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org12.example.com/users/User1@org12.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org12admin:org12adminpw@localhost:20054 --caname ca-org12 -M "${PWD}/organizations/peerOrganizations/org12.example.com/users/Admin@org12.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org12/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org12.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org12.example.com/users/Admin@org12.example.com/msp/config.yaml"
}

function createOrg13() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org13.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org13.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:21054 --caname ca-org13 --tls.certfiles "${PWD}/organizations/fabric-ca/org13/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-21054-ca-org13.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-21054-ca-org13.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-21054-ca-org13.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-21054-ca-org13.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org13.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org13's CA cert to org13's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org13.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org13/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org13.example.com/msp/tlscacerts/ca.crt"

  # Copy org13's CA cert to org13's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org13.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org13/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org13.example.com/tlsca/tlsca.org13.example.com-cert.pem"

  # Copy org13's CA cert to org13's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org13.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org13/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org13.example.com/ca/ca.org13.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org13 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org13/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org13 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org13/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org13 --id.name org13admin --id.secret org13adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org13/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:21054 --caname ca-org13 -M "${PWD}/organizations/peerOrganizations/org13.example.com/peers/peer0.org13.example.com/msp" --csr.hosts peer0.org13.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org13/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org13.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org13.example.com/peers/peer0.org13.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:21054 --caname ca-org13 -M "${PWD}/organizations/peerOrganizations/org13.example.com/peers/peer0.org13.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org13.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org13/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org13.example.com/peers/peer0.org13.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org13.example.com/peers/peer0.org13.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org13.example.com/peers/peer0.org13.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org13.example.com/peers/peer0.org13.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org13.example.com/peers/peer0.org13.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org13.example.com/peers/peer0.org13.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:21054 --caname ca-org13 -M "${PWD}/organizations/peerOrganizations/org13.example.com/users/User1@org13.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org13/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org13.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org13.example.com/users/User1@org13.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org13admin:org13adminpw@localhost:21054 --caname ca-org13 -M "${PWD}/organizations/peerOrganizations/org13.example.com/users/Admin@org13.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org13/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org13.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org13.example.com/users/Admin@org13.example.com/msp/config.yaml"
}

function createOrg14() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org14.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org14.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:22054 --caname ca-org14 --tls.certfiles "${PWD}/organizations/fabric-ca/org14/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-22054-ca-org14.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-22054-ca-org14.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-22054-ca-org14.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-22054-ca-org14.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org14.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org14's CA cert to org14's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org14.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org14/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org14.example.com/msp/tlscacerts/ca.crt"

  # Copy org14's CA cert to org14's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org14.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org14/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org14.example.com/tlsca/tlsca.org14.example.com-cert.pem"

  # Copy org14's CA cert to org14's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org14.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org14/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org14.example.com/ca/ca.org14.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org14 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org14/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org14 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org14/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org14 --id.name org14admin --id.secret org14adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org14/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:22054 --caname ca-org14 -M "${PWD}/organizations/peerOrganizations/org14.example.com/peers/peer0.org14.example.com/msp" --csr.hosts peer0.org14.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org14/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org14.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org14.example.com/peers/peer0.org14.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:22054 --caname ca-org14 -M "${PWD}/organizations/peerOrganizations/org14.example.com/peers/peer0.org14.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org14.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org14/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org14.example.com/peers/peer0.org14.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org14.example.com/peers/peer0.org14.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org14.example.com/peers/peer0.org14.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org14.example.com/peers/peer0.org14.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org14.example.com/peers/peer0.org14.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org14.example.com/peers/peer0.org14.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:22054 --caname ca-org14 -M "${PWD}/organizations/peerOrganizations/org14.example.com/users/User1@org14.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org14/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org14.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org14.example.com/users/User1@org14.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org14admin:org14adminpw@localhost:22054 --caname ca-org14 -M "${PWD}/organizations/peerOrganizations/org14.example.com/users/Admin@org14.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org14/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org14.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org14.example.com/users/Admin@org14.example.com/msp/config.yaml"
}

function createOrg15() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org15.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org15.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:23054 --caname ca-org15 --tls.certfiles "${PWD}/organizations/fabric-ca/org15/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-23054-ca-org15.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-23054-ca-org15.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-23054-ca-org15.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-23054-ca-org15.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org15.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org15's CA cert to org15's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org15.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org15/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org15.example.com/msp/tlscacerts/ca.crt"

  # Copy org15's CA cert to org15's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org15.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org15/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org15.example.com/tlsca/tlsca.org15.example.com-cert.pem"

  # Copy org15's CA cert to org15's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org15.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org15/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org15.example.com/ca/ca.org15.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org15 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org15/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org15 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org15/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org15 --id.name org15admin --id.secret org15adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org15/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:23054 --caname ca-org15 -M "${PWD}/organizations/peerOrganizations/org15.example.com/peers/peer0.org15.example.com/msp" --csr.hosts peer0.org15.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org15/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org15.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org15.example.com/peers/peer0.org15.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:23054 --caname ca-org15 -M "${PWD}/organizations/peerOrganizations/org15.example.com/peers/peer0.org15.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org15.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org15/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org15.example.com/peers/peer0.org15.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org15.example.com/peers/peer0.org15.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org15.example.com/peers/peer0.org15.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org15.example.com/peers/peer0.org15.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org15.example.com/peers/peer0.org15.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org15.example.com/peers/peer0.org15.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:23054 --caname ca-org15 -M "${PWD}/organizations/peerOrganizations/org15.example.com/users/User1@org15.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org15/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org15.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org15.example.com/users/User1@org15.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org15admin:org15adminpw@localhost:23054 --caname ca-org15 -M "${PWD}/organizations/peerOrganizations/org15.example.com/users/Admin@org15.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org15/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org15.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org15.example.com/users/Admin@org15.example.com/msp/config.yaml"
}

function createOrg16() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org16.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org16.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:24054 --caname ca-org16 --tls.certfiles "${PWD}/organizations/fabric-ca/org16/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-24054-ca-org16.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-24054-ca-org16.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-24054-ca-org16.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-24054-ca-org16.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org16.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org16's CA cert to org16's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org16.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org16/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org16.example.com/msp/tlscacerts/ca.crt"

  # Copy org16's CA cert to org16's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org16.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org16/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org16.example.com/tlsca/tlsca.org16.example.com-cert.pem"

  # Copy org16's CA cert to org16's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org16.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org16/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org16.example.com/ca/ca.org16.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org16 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org16/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org16 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org16/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org16 --id.name org16admin --id.secret org16adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org16/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:24054 --caname ca-org16 -M "${PWD}/organizations/peerOrganizations/org16.example.com/peers/peer0.org16.example.com/msp" --csr.hosts peer0.org16.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org16/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org16.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org16.example.com/peers/peer0.org16.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:24054 --caname ca-org16 -M "${PWD}/organizations/peerOrganizations/org16.example.com/peers/peer0.org16.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org16.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org16/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org16.example.com/peers/peer0.org16.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org16.example.com/peers/peer0.org16.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org16.example.com/peers/peer0.org16.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org16.example.com/peers/peer0.org16.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org16.example.com/peers/peer0.org16.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org16.example.com/peers/peer0.org16.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:24054 --caname ca-org16 -M "${PWD}/organizations/peerOrganizations/org16.example.com/users/User1@org16.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org16/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org16.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org16.example.com/users/User1@org16.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org16admin:org16adminpw@localhost:24054 --caname ca-org16 -M "${PWD}/organizations/peerOrganizations/org16.example.com/users/Admin@org16.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org16/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org16.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org16.example.com/users/Admin@org16.example.com/msp/config.yaml"
}

function createOrg17() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org17.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org17.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:25054 --caname ca-org17 --tls.certfiles "${PWD}/organizations/fabric-ca/org17/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-25054-ca-org17.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-25054-ca-org17.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-25054-ca-org17.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-25054-ca-org17.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org17.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org17's CA cert to org17's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org17.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org17/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org17.example.com/msp/tlscacerts/ca.crt"

  # Copy org17's CA cert to org17's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org17.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org17/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org17.example.com/tlsca/tlsca.org17.example.com-cert.pem"

  # Copy org17's CA cert to org17's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org17.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org17/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org17.example.com/ca/ca.org17.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org17 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org17/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org17 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org17/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org17 --id.name org17admin --id.secret org17adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org17/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:25054 --caname ca-org17 -M "${PWD}/organizations/peerOrganizations/org17.example.com/peers/peer0.org17.example.com/msp" --csr.hosts peer0.org17.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org17/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org17.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org17.example.com/peers/peer0.org17.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:25054 --caname ca-org17 -M "${PWD}/organizations/peerOrganizations/org17.example.com/peers/peer0.org17.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org17.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org17/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org17.example.com/peers/peer0.org17.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org17.example.com/peers/peer0.org17.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org17.example.com/peers/peer0.org17.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org17.example.com/peers/peer0.org17.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org17.example.com/peers/peer0.org17.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org17.example.com/peers/peer0.org17.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:25054 --caname ca-org17 -M "${PWD}/organizations/peerOrganizations/org17.example.com/users/User1@org17.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org17/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org17.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org17.example.com/users/User1@org17.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org17admin:org17adminpw@localhost:25054 --caname ca-org17 -M "${PWD}/organizations/peerOrganizations/org17.example.com/users/Admin@org17.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org17/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org17.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org17.example.com/users/Admin@org17.example.com/msp/config.yaml"
}

function createOrg18() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org18.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org18.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:26054 --caname ca-org18 --tls.certfiles "${PWD}/organizations/fabric-ca/org18/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-26054-ca-org18.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-26054-ca-org18.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-26054-ca-org18.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-26054-ca-org18.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org18.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org18's CA cert to org18's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org18.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org18/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org18.example.com/msp/tlscacerts/ca.crt"

  # Copy org18's CA cert to org18's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org18.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org18/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org18.example.com/tlsca/tlsca.org18.example.com-cert.pem"

  # Copy org18's CA cert to org18's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org18.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org18/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org18.example.com/ca/ca.org18.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org18 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org18/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org18 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org18/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org18 --id.name org18admin --id.secret org18adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org18/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:26054 --caname ca-org18 -M "${PWD}/organizations/peerOrganizations/org18.example.com/peers/peer0.org18.example.com/msp" --csr.hosts peer0.org18.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org18/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org18.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org18.example.com/peers/peer0.org18.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:26054 --caname ca-org18 -M "${PWD}/organizations/peerOrganizations/org18.example.com/peers/peer0.org18.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org18.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org18/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org18.example.com/peers/peer0.org18.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org18.example.com/peers/peer0.org18.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org18.example.com/peers/peer0.org18.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org18.example.com/peers/peer0.org18.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org18.example.com/peers/peer0.org18.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org18.example.com/peers/peer0.org18.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:26054 --caname ca-org18 -M "${PWD}/organizations/peerOrganizations/org18.example.com/users/User1@org18.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org18/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org18.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org18.example.com/users/User1@org18.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org18admin:org18adminpw@localhost:26054 --caname ca-org18 -M "${PWD}/organizations/peerOrganizations/org18.example.com/users/Admin@org18.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org18/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org18.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org18.example.com/users/Admin@org18.example.com/msp/config.yaml"
}

function createOrg19() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org19.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org19.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:27054 --caname ca-org19 --tls.certfiles "${PWD}/organizations/fabric-ca/org19/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-27054-ca-org19.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-27054-ca-org19.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-27054-ca-org19.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-27054-ca-org19.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org19.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org19's CA cert to org19's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org19.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org19/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org19.example.com/msp/tlscacerts/ca.crt"

  # Copy org19's CA cert to org19's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org19.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org19/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org19.example.com/tlsca/tlsca.org19.example.com-cert.pem"

  # Copy org19's CA cert to org19's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org19.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org19/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org19.example.com/ca/ca.org19.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org19 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org19/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org19 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org19/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org19 --id.name org19admin --id.secret org19adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org19/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:27054 --caname ca-org19 -M "${PWD}/organizations/peerOrganizations/org19.example.com/peers/peer0.org19.example.com/msp" --csr.hosts peer0.org19.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org19/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org19.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org19.example.com/peers/peer0.org19.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:27054 --caname ca-org19 -M "${PWD}/organizations/peerOrganizations/org19.example.com/peers/peer0.org19.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org19.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org19/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org19.example.com/peers/peer0.org19.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org19.example.com/peers/peer0.org19.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org19.example.com/peers/peer0.org19.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org19.example.com/peers/peer0.org19.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org19.example.com/peers/peer0.org19.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org19.example.com/peers/peer0.org19.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:27054 --caname ca-org19 -M "${PWD}/organizations/peerOrganizations/org19.example.com/users/User1@org19.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org19/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org19.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org19.example.com/users/User1@org19.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org19admin:org19adminpw@localhost:27054 --caname ca-org19 -M "${PWD}/organizations/peerOrganizations/org19.example.com/users/Admin@org19.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org19/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org19.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org19.example.com/users/Admin@org19.example.com/msp/config.yaml"
}

function createOrg20() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/org20.example.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/org20.example.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:28054 --caname ca-org20 --tls.certfiles "${PWD}/organizations/fabric-ca/org20/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-28054-ca-org20.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-28054-ca-org20.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-28054-ca-org20.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-28054-ca-org20.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/org20.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy org20's CA cert to org20's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/org20.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/org20/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org20.example.com/msp/tlscacerts/ca.crt"

  # Copy org20's CA cert to org20's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org20.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/org20/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org20.example.com/tlsca/tlsca.org20.example.com-cert.pem"

  # Copy org20's CA cert to org20's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/org20.example.com/ca"
  cp "${PWD}/organizations/fabric-ca/org20/ca-cert.pem" "${PWD}/organizations/peerOrganizations/org20.example.com/ca/ca.org20.example.com-cert.pem"

  infoln "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-org20 --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/org20/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-org20 --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/org20/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-org20 --id.name org20admin --id.secret org20adminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/org20/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:28054 --caname ca-org20 -M "${PWD}/organizations/peerOrganizations/org20.example.com/peers/peer0.org20.example.com/msp" --csr.hosts peer0.org20.example.com --tls.certfiles "${PWD}/organizations/fabric-ca/org20/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org20.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org20.example.com/peers/peer0.org20.example.com/msp/config.yaml"

  infoln "Generating the peer0-tls certificates"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:28054 --caname ca-org20 -M "${PWD}/organizations/peerOrganizations/org20.example.com/peers/peer0.org20.example.com/tls" --enrollment.profile tls --csr.hosts peer0.org20.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/org20/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/org20.example.com/peers/peer0.org20.example.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/org20.example.com/peers/peer0.org20.example.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/org20.example.com/peers/peer0.org20.example.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/org20.example.com/peers/peer0.org20.example.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/org20.example.com/peers/peer0.org20.example.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/org20.example.com/peers/peer0.org20.example.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:28054 --caname ca-org20 -M "${PWD}/organizations/peerOrganizations/org20.example.com/users/User1@org20.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org20/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org20.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org20.example.com/users/User1@org20.example.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://org20admin:org20adminpw@localhost:28054 --caname ca-org20 -M "${PWD}/organizations/peerOrganizations/org20.example.com/users/Admin@org20.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/org20/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/org20.example.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/org20.example.com/users/Admin@org20.example.com/msp/config.yaml"
}

function createOrderer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/example.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/example.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/tlsca/tlsca.example.com-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp" --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls" --enrollment.profile tls --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp/config.yaml"
}
